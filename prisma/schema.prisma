// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma
//Tabla para personajes

model Character {
  id             Int                      @id @default(autoincrement())
  name           String
  status         String
  species        String
  gender         String
  type           String?
  episodes       Episode[]                @relation("CharacterEpisodes")
  participations CharacterParticipation[]

  @@unique([name, species, status, type])
}

model Episode {
  id             Int                      @id @default(autoincrement())
  name           String
  air_date       String
  episode        String
  characters     Character[]              @relation("CharacterEpisodes")
  season         Int // Campo donde se almacena temporada
  episodeNumber  Int? //Campo para almacenar numero de episodio 
  canceled       Boolean                  @default(false) //Campo para marcar episodios cancelados
  participations CharacterParticipation[]

  @@unique([name, season, episodeNumber]) // Garantiza que el nombre sea unico dentro de la misma temporada
}

model CharacterParticipation {
  id                Int       @id @default(autoincrement())
  episodeId         Int
  characterId       Int
  participationTime String
  episode           Episode   @relation(fields: [episodeId], references: [id])
  character         Character @relation(fields: [characterId], references: [id])
  timeSlot          String
  description       String?

  @@unique([episodeId, characterId, participationTime])
}
